(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{439:function(s,t,a){"use strict";a.r(t);var n=a(15),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"typescript入门到进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript入门到进阶"}},[s._v("#")]),s._v(" TypeScript入门到进阶")]),s._v(" "),a("p",[s._v("记录 TypeScript 学习经验"),a("br")]),s._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("p",[a("code",[s._v("npm install -g typescript")])]),s._v(" "),a("h3",{attrs:{id:"快速创建一个-tsconfig-json-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速创建一个-tsconfig-json-文件"}},[s._v("#")]),s._v(" 快速创建一个 "),a("code",[s._v("tsconfig.json")]),s._v(" 文件")]),s._v(" "),a("p",[a("code",[s._v("tsc --init")])]),s._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://coderly.cn/pages/0bea56/",target:"_blank",rel:"noopener noreferrer"}},[s._v("配置原文地址"),a("OutboundLink")],1)])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"compilerOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Basic Options */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"target"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"esnext"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// target用于指定编译之后的版本目标 version：'es3'(default), 'es5', 'es2015', 'es2016', 'es2017', 'es2018', 'esnext'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"module"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"esnext"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用来指定要使用的模块标准：'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'esnext'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lib"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"esnext"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dom"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dom.iterable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripthost"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// lib 用于指定要包含在编译中的库文件，如果要使用一些es6 的新语法，你需要引入 es6 这个库，或者也可以写 es2015")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "allowJs": true, // allowJs 设置的值为true或false，用来指定是否允许编译js文件，默认是false，即不编译js文件')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "checkJs": true, // checkJs 的值为true或false，用来指定是否检查和报告js文件中的错误，默认是false')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"jsx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"preserve"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定jsx代码的开发环境：'preserve', 'react-native', 'react'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "declaration": true, // declaration 的值为 true或false，用来指定是否在编译的时候生成相应的 ".d.ts" 声明文件。如果为true，编译每个ts文件之后会生成一个js文件和一个声明文件。但是 declaration 和 allJs不能同时设定为true')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "declarationMap": true, // 值为true或false，指定是否为声明文件 .d.ts 生成map文件')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"sourceMap"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sourceMap的值为true或false，用来指定编译时是否生成.map 文件")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "outFile": "./", // outFile 用于指定将输出文件合并为一个文件，它的值为一个文件路径名，比如设置为 ./dist//main.js，则输出的文件为一个main.js，但是要注意，只有设置 module 的值为amd 和 system 模块时才支持这个配置')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "outDir": "./", // outDir用来指定输出文件夹，值为一个文件夹路径字符串，输出的文件都将放置在这个文件夹')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "rootDir": "./", // 用来指定编译文件的根目录，编译器会在根目录查找入口文件，如果编译器发现以 rootDir 的值作为根目录查找入口文件并不会把所有文件加载进去的话会报错，但是不会停止编译')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "composite": true, // 是否编译构建引用项目')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "removeComments": true, // removeComments值为true或false，用于指定是否将编译后的文件中的注释删掉，设为true的话即删掉注释，默认为false。')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noEmit": true, // 不生成编译文件，这个一般很少用了')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"importHelpers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// importHelpers的值为true或false，指定是否引入 tslib 里的辅助工具函数，默认为false")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// \"downlevelIteration\": true, // 当 target为 es5 或 es3 时，为 'for-of'、'spread' 和 'destructuring' 中的迭代器提供完全支持 ")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "isolatedModules": true, // isolatedModules 的值为true或false，指定是否将每个文件作为单独的模块，默认为true，它不可以和 declaration 同时设定')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Strict Type-Checking Options */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"strict"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// strict 的值为true或false，用于指定是否启动所有类型检查，如果设为true则会同时开启下面这几个严格类型检查，默认为false")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noImplicitAny": true, // noImplicitAny 的值为true或 false，如果我们没有为一些值设置明确的类型，编译器会默认认为这个值为any类型，如果设为 true，则如果没有设置明确的类型会报错，默认为false')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "strictNullChecks": true, // strictNullChecks的值为true或false，当设为true时，null和undefined值不能赋值给非这两种类型的值，别的类型的值也不能赋给他们，除了any类型，还有个例外就是undefined可以赋值给void类型')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "strictFunctionTypes": true, // strictFunctionTypes的值为true或false，用来指定是否使用函数参数双向协变检查')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "strictBindCallApply": true, // strictBindCallApply的值为true或false，设为true后会对bind、call和apply绑定的方法的参数的检查是严格检测的')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "strictPropertyInitialization": true, //strictPropertyInitialization的值为true或false，设为true后会检查类的非undefined属性是否已经在构造函数里初始化，如果要开启这项，需要同时开启strictNullChecks，默认为false')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noImplicitThis": true, // 当 this 表达式的值为 any 类型的时候，会生成一个错误')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// \"alwaysStrict\": true, // alwaysStrict的值为true或false，指定始终以严格模式检查每个模块，并且在编译之后的js文件中加入 'use strict' 字样，用来告诉浏览器该js为严格模式")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Additional Checks */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noUnusedLocals": true, // noUnusedLocals的值为true或false，用于检查是否有定义了但是没有使用的变量，对于这一点的检测，使用eslint可以在你书写代码的时候做提示')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noUnusedParameters": true, // noUnusedParameters的值为true或false，用于检查是否有在函数体中没有使用的参数，这个也可以配合eslint来做检查，默认是false')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noImplicitReturns": true, // noImplicitReturns的值为true或false，用于检查函数是否有返回值，设为true后，如果函数没有返回值则会提示，默认是false')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noFallthroughCasesInSwitch": true, // noFallthroughCasesInSwitch的值为true或false，用于检查switch中是否有case没有使用break跳出switch，默认是false')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Module Resolution Options */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"moduleResolution"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// moduleResolution用于选择模块解析策略，有 node 和 classic 两种类型，")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"baseUrl"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// baseUrl 用于设置解析非模块名称的基本目录，相对模块不会受 baseUrl 的影响")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"paths"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"@/*"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/*"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// paths用于设置模块名到基于 baseUrl 的路径映射")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "rootDirs": [')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "src/core"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ], // rootDirs 可以指定一个路径列表，在构建时编译器会将这个路径列表中的路径中的内容都放到一个文件夹中")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "typeRoots": [], // typeRoots用来指定声明文件或文件夹的路径列表，如果指定了此项，则只有在这里列出的声明文件才会被加载')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"types"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"webpack-env"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// types 用来指定需要包含的模块，只有在这里列出的模块的声明问渐渐才会被加载进来")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"allowSyntheticDefaultImports"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// allowSyntheticDefaultImports的值为true或false，用来指定允许从没有默认导出的模块中默认导入")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"esModuleInterop"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过为导入内容创建命名空间，实现 commonjs 和 es 模块之间的互操作性")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "preserveSymlinks": true, // 不把符号链接解析为其真实路径')]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Source Map Options */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "sourceRoot": "", // sourceRoot 用于指定调试器应该找到 typescript 文件而不是源文件位置，这个值会被写进 .map文件里')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "mapRoot": "", // mapRoot 用于指定调试器找到映射文件而非生成文件的位置，指定map文件的根路径，该选项会影响.map 文件中的source 属性')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "inlineSourceMap": true, // inlineSourceMap的值为true或false，指定是否将map文件的内容和js文件编译在同一个js文件中，如果设为true，则map的内容会以 //# sourceMappingURL=然后接base64字符串的形式插入在js文件底部')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "inlineSources": true, // inlineSources的值为true或false，用于指定是否进一步将 .ts文件的内容也包含到输出文件中')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Experimental Options */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"experimentalDecorators"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// experimentalDecorators的值为true或false，用于指定是否启用实验性的装饰器特性")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "emitDecoratorMetadata": false // emitDecoratorMetadata的值为true或false，用于指定是否为装饰器提供元数据支持')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "files": [], // files可以配置一个数组列表，里面包含指定文件的相对或绝对路径，编译器在编译的时候只会编译包含在files 中列出的文件。如果不指定，则取决于有没有include选项，如果没有include选项，则默认会编译根目录以及所有子目录中的文件')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"include"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/**/*.ts"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/**/*.tsx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/**/*.vue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tests/**/*.ts"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tests/**/*.tsx"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// include 也可以指定要编译的路径列表，但是和 files 的区别在于，这里的路径可以是文件夹，也可以是文件，可以使用相对路径和绝对路径，而且可以使用通配符，")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"exclude"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node_modules"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// exclude 表示要排除的、不编译的文件、它也可以指定一个列表，规则和 include 一样，可以是文件也可以是文件夹，可以是相对路径或绝对路径，可以使用通配符")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "extends": "", // extends 可以通过指定一个其它的 tsconfig.json文件路径，来继承这个配置文件里的配置，继承来的文件的配置会覆盖当前文件定义的配置。ts在3.2版本开始，支持继承一个来自node.js包的tsconfig.json配置文件')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "compileOnSave": true, // compileOnSave的值是true或 false，如果为true，在我们编辑了项目中文件保存的时候，编译器会根据 tsconfig.json 的配置重新生成文件，不过这个要编辑器支持')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "references": [] // 一个对象数组，指定要引用的项目')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br")])]),a("h3",{attrs:{id:"编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写"}},[s._v("#")]),s._v(" 编写")]),s._v(" "),a("ul",[a("li",[s._v("add.ts")])]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ol",[a("li",[a("p",[s._v("使用 tsc（TypeScript Compiler）命令将 .ts 文件转译为 .js 文件，执行命令"),a("br"),s._v(" "),a("code",[s._v("tsc add.ts")])])]),s._v(" "),a("li",[a("p",[s._v("使用 "),a("code",[s._v("ts-node")]),s._v(" 运行 ts 代码，本质上直接运行ts（而非运行编译后的js）")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("npm install ts-node -g")])]),s._v(" "),a("li",[a("code",[s._v("ts-node add.ts")])])])])]),s._v(" "),a("h2",{attrs:{id:"入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#入门"}},[s._v("#")]),s._v(" 入门")]),s._v(" "),a("blockquote",[a("p",[s._v("静态类型检测：在编译时期，静态类型的编程语言即可准确地发现类型错误"),a("br"),s._v("\nTypeScript 编译器将通过对比检测变量接收值得类型与我们显示注解得类型从而检测类型是否存在错误")])]),s._v(" "),a("h3",{attrs:{id:"基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),a("h4",{attrs:{id:"原始类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原始类型"}},[s._v("#")]),s._v(" 原始类型")]),s._v(" "),a("ul",[a("li",[s._v("string")]),s._v(" "),a("li",[s._v("number")]),s._v(" "),a("li",[s._v("boolean")]),s._v(" "),a("li",[s._v("null")]),s._v(" "),a("li",[s._v("undefined")]),s._v(" "),a("li",[s._v("symbol")]),s._v(" "),a("li",[s._v("bigint")])]),s._v(" "),a("h4",{attrs:{id:"复杂类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复杂类型"}},[s._v("#")]),s._v(" 复杂类型")]),s._v(" "),a("ul",[a("li",[s._v("数组")]),s._v(" "),a("li",[s._v("元组：可以限制数组元素的个数和类型，它特别适合用来实现多值返回"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" useState "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'react'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("useCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" setCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])]),s._v(" "),a("h4",{attrs:{id:"特殊类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊类型"}},[s._v("#")]),s._v(" 特殊类型")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("any：指的是一个"),a("code",[s._v("任意类型")]),s._v("，它是官方提供的一个选择性"),a("code",[s._v("绕过静态类型检测")]),s._v("的作弊方式")]),s._v(" "),a("ul",[a("li",[s._v("可以把任何类型的值赋值给 "),a("code",[s._v("any")]),s._v(" 类型的变量")]),s._v(" "),a("li",[s._v("可以把 any 类型的值赋值给任意类型（"),a("strong",[s._v("除 never 以外")]),s._v("）的变量")]),s._v(" "),a("li",[a("em",[s._v("any 类型会在对象的调用链中进行传导，即所有 any 类型的任意属性的类型都是 any")])])])]),s._v(" "),a("li",[a("p",[s._v("unknown：用来描述类型并不确定的变量")]),s._v(" "),a("ul",[a("li",[s._v("可以将任意类型的值赋值给 unknown")]),s._v(" "),a("li",[s._v("unknown 类型的值只能赋值给 unknown 或 any")])])]),s._v(" "),a("li",[a("p",[s._v("void，undefined，null：实际上并没有太大的用处")]),s._v(" "),a("ul",[a("li",[s._v("void 仅适用于表示没有返回值的函数，即该函数没有返回值")]),s._v(" "),a("li",[s._v("undefined 的表示一个可缺省、未定义的属性，"),a("em",[s._v("主要体现在接口类型上")])]),s._v(" "),a("li",[s._v("null 表明对象或属性可能是空值，"),a("em",[s._v("主要体现在接口制定上")])])])]),s._v(" "),a("li",[a("p",[s._v("never：表示永远不会发生值的类型")]),s._v(" "),a("ul",[a("li",[s._v("never 是所有类型的子类型")]),s._v(" "),a("li",[s._v("可以给所有类型赋值")]),s._v(" "),a("li",[a("em",[s._v("除了 never 自身以外，其他类型（包括 any 在内的类型）都不能为 never 类型赋值")])])])]),s._v(" "),a("li",[a("p",[s._v("object：表示非原始类型的类型")]),s._v(" "),a("ul",[a("li",[s._v("非 string、number、boolean、null、undefined、symbol、bigint")])])])]),s._v(" "),a("h4",{attrs:{id:"字面量类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字面量类型"}},[s._v("#")]),s._v(" 字面量类型")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("字符串字面量类型")]),s._v(" "),a("ul",[a("li",[s._v("字符串字面量联合类型："),a("code",[s._v("type direction = 'up' | 'down'")])])])]),s._v(" "),a("li",[a("p",[s._v("数字字面量类型")])]),s._v(" "),a("li",[a("p",[s._v("布尔字面量类型")])])]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sex"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'this is my name'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'this is my name'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 联合类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  sex"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'au'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'coderly'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"函数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数类型"}},[s._v("#")]),s._v(" 函数类型")]),s._v(" "),a("p",[s._v("通过 function 字面量和箭头函数的形式定义函数"),a("br"),s._v("\n可以显式指定函数参数和返回值的类型")]),s._v(" "),a("h5",{attrs:{id:"可缺省和可推断的返回值类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可缺省和可推断的返回值类型"}},[s._v("#")]),s._v(" 可缺省和可推断的返回值类型")]),s._v(" "),a("p",[s._v("函数返回值的类型可以在 TypeScript 中被推断出来，即可缺省")]),s._v(" "),a("h5",{attrs:{id:"参数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数类型"}},[s._v("#")]),s._v(" 参数类型")]),s._v(" "),a("ul",[a("li",[s._v("可选参数和默认参数")])]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ? 代表该参数可以缺省")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" message\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// = 后面的是默认参数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h5",{attrs:{id:"剩余参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剩余参数"}},[s._v("#")]),s._v(" 剩余参数")]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("nums"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("剩余参数应该作为函数的最后一个参数，例如下面的是错误的")])]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 剩余参数 只能作为最后一个参数 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("nums"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ❌")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 正确写法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("nums"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ✔")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h5",{attrs:{id:"this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[s._v("#")]),s._v(" this")]),s._v(" "),a("ul",[a("li",[s._v("typescript 中使用 this 必须显式声明 this 的类型")]),s._v(" "),a("li",[s._v("不显式声明 this 的类型，将是 any 类型")])]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code")]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"})]),a("h3",{attrs:{id:"类型断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型断言"}},[s._v("#")]),s._v(" 类型断言")]),s._v(" "),a("blockquote",[a("p",[s._v("可以用来手动指定一个值的类型"),a("br"),s._v("\n父子，子父类型之间可以使用类型断言进行转换")])]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// number 类型没有 length 属性，断言 any 类型可以通过类型检测")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"类型推断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型推断"}},[s._v("#")]),s._v(" 类型推断")]),s._v(" "),a("ul",[a("li",[s._v("如果没有明确的指定类型，那么 TypeScript 会依照类型推论（Type Inference）的规则推断出一个类型")])]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 被推断为 number 类型")]),s._v("\n\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'au'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为推断为 number 类型，给它赋值 string 类型将会报错")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("如果定义的时候没有赋值，不管之后有没有赋值，都会被推断成 any 类型而完全不被类型检查")])]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义的时候没有赋值，被推断为 any 类型")]),s._v("\n\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'18'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"类型拓宽、类型缩小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型拓宽、类型缩小"}},[s._v("#")]),s._v(" 类型拓宽、类型缩小")]),s._v(" "),a("h2",{attrs:{id:"进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进阶"}},[s._v("#")]),s._v(" 进阶")])])}),[],!1,null,null,null);t.default=e.exports}}]);