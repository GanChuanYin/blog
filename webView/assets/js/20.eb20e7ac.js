(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{437:function(s,t,n){"use strict";n.r(t);var a=n(15),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"tsconfig-json"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tsconfig-json"}},[s._v("#")]),s._v(" tsconfig.json")]),s._v(" "),n("h2",{attrs:{id:"配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[s._v("#")]),s._v(" 配置文件")]),s._v(" "),n("ul",[n("li",[s._v("生成"),n("code",[s._v("tsconfig.json")]),s._v(" 配置文件的命令："),n("code",[s._v("tsc --init")])])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"compilerOptions"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Basic Options */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"target"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"esnext"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// target用于指定编译之后的版本目标 version：'es3'(default), 'es5', 'es2015', 'es2016', 'es2017', 'es2018', 'esnext'")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"module"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"esnext"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用来指定要使用的模块标准：'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'esnext'")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lib"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"esnext"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dom"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dom.iterable"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripthost"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// lib 用于指定要包含在编译中的库文件，如果要使用一些es6 的新语法，你需要引入 es6 这个库，或者也可以写 es2015")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "allowJs": true, // allowJs 设置的值为true或false，用来指定是否允许编译js文件，默认是false，即不编译js文件')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "checkJs": true, // checkJs 的值为true或false，用来指定是否检查和报告js文件中的错误，默认是false')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jsx"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"preserve"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定jsx代码的开发环境：'preserve', 'react-native', 'react'")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "declaration": true, // declaration 的值为 true或false，用来指定是否在编译的时候生成相应的 ".d.ts" 声明文件。如果为true，编译每个ts文件之后会生成一个js文件和一个声明文件。但是 declaration 和 allJs不能同时设定为true')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "declarationMap": true, // 值为true或false，指定是否为声明文件 .d.ts 生成map文件')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sourceMap"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sourceMap的值为true或false，用来指定编译时是否生成.map 文件")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "outFile": "./", // outFile 用于指定将输出文件合并为一个文件，它的值为一个文件路径名，比如设置为 ./dist//main.js，则输出的文件为一个main.js，但是要注意，只有设置 module 的值为amd 和 system 模块时才支持这个配置')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "outDir": "./", // outDir用来指定输出文件夹，值为一个文件夹路径字符串，输出的文件都将放置在这个文件夹')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "rootDir": "./", // 用来指定编译文件的根目录，编译器会在根目录查找入口文件，如果编译器发现以 rootDir 的值作为根目录查找入口文件并不会把所有文件加载进去的话会报错，但是不会停止编译')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "composite": true, // 是否编译构建引用项目')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "removeComments": true, // removeComments值为true或false，用于指定是否将编译后的文件中的注释删掉，设为true的话即删掉注释，默认为false。')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noEmit": true, // 不生成编译文件，这个一般很少用了')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"importHelpers"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// importHelpers的值为true或false，指定是否引入 tslib 里的辅助工具函数，默认为false")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// \"downlevelIteration\": true, // 当 target为 es5 或 es3 时，为 'for-of'、'spread' 和 'destructuring' 中的迭代器提供完全支持 ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "isolatedModules": true, // isolatedModules 的值为true或false，指定是否将每个文件作为单独的模块，默认为true，它不可以和 declaration 同时设定')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Strict Type-Checking Options */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"strict"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// strict 的值为true或false，用于指定是否启动所有类型检查，如果设为true则会同时开启下面这几个严格类型检查，默认为false")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noImplicitAny": true, // noImplicitAny 的值为true或 false，如果我们没有为一些值设置明确的类型，编译器会默认认为这个值为any类型，如果设为 true，则如果没有设置明确的类型会报错，默认为false')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "strictNullChecks": true, // strictNullChecks的值为true或false，当设为true时，null和undefined值不能赋值给非这两种类型的值，别的类型的值也不能赋给他们，除了any类型，还有个例外就是undefined可以赋值给void类型')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "strictFunctionTypes": true, // strictFunctionTypes的值为true或false，用来指定是否使用函数参数双向协变检查')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "strictBindCallApply": true, // strictBindCallApply的值为true或false，设为true后会对bind、call和apply绑定的方法的参数的检查是严格检测的')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "strictPropertyInitialization": true, //strictPropertyInitialization的值为true或false，设为true后会检查类的非undefined属性是否已经在构造函数里初始化，如果要开启这项，需要同时开启strictNullChecks，默认为false')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noImplicitThis": true, // 当 this 表达式的值为 any 类型的时候，会生成一个错误')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// \"alwaysStrict\": true, // alwaysStrict的值为true或false，指定始终以严格模式检查每个模块，并且在编译之后的js文件中加入 'use strict' 字样，用来告诉浏览器该js为严格模式")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Additional Checks */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noUnusedLocals": true, // noUnusedLocals的值为true或false，用于检查是否有定义了但是没有使用的变量，对于这一点的检测，使用eslint可以在你书写代码的时候做提示')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noUnusedParameters": true, // noUnusedParameters的值为true或false，用于检查是否有在函数体中没有使用的参数，这个也可以配合eslint来做检查，默认是false')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noImplicitReturns": true, // noImplicitReturns的值为true或false，用于检查函数是否有返回值，设为true后，如果函数没有返回值则会提示，默认是false')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "noFallthroughCasesInSwitch": true, // noFallthroughCasesInSwitch的值为true或false，用于检查switch中是否有case没有使用break跳出switch，默认是false')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Module Resolution Options */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"moduleResolution"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// moduleResolution用于选择模块解析策略，有 node 和 classic 两种类型，")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"baseUrl"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// baseUrl 用于设置解析非模块名称的基本目录，相对模块不会受 baseUrl 的影响")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"paths"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@/*"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/*"')]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// paths用于设置模块名到基于 baseUrl 的路径映射")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "rootDirs": [')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "src/core"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ], // rootDirs 可以指定一个路径列表，在构建时编译器会将这个路径列表中的路径中的内容都放到一个文件夹中")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "typeRoots": [], // typeRoots用来指定声明文件或文件夹的路径列表，如果指定了此项，则只有在这里列出的声明文件才会被加载')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"types"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"webpack-env"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// types 用来指定需要包含的模块，只有在这里列出的模块的声明问渐渐才会被加载进来")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"allowSyntheticDefaultImports"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// allowSyntheticDefaultImports的值为true或false，用来指定允许从没有默认导出的模块中默认导入")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"esModuleInterop"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过为导入内容创建命名空间，实现 commonjs 和 es 模块之间的互操作性")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "preserveSymlinks": true, // 不把符号链接解析为其真实路径')]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Source Map Options */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "sourceRoot": "", // sourceRoot 用于指定调试器应该找到 typescript 文件而不是源文件位置，这个值会被写进 .map文件里')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "mapRoot": "", // mapRoot 用于指定调试器找到映射文件而非生成文件的位置，指定map文件的根路径，该选项会影响.map 文件中的source 属性')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "inlineSourceMap": true, // inlineSourceMap的值为true或false，指定是否将map文件的内容和js文件编译在同一个js文件中，如果设为true，则map的内容会以 //# sourceMappingURL=然后接base64字符串的形式插入在js文件底部')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "inlineSources": true, // inlineSources的值为true或false，用于指定是否进一步将 .ts文件的内容也包含到输出文件中')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Experimental Options */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"experimentalDecorators"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// experimentalDecorators的值为true或false，用于指定是否启用实验性的装饰器特性")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "emitDecoratorMetadata": false // emitDecoratorMetadata的值为true或false，用于指定是否为装饰器提供元数据支持')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "files": [], // files可以配置一个数组列表，里面包含指定文件的相对或绝对路径，编译器在编译的时候只会编译包含在files 中列出的文件。如果不指定，则取决于有没有include选项，如果没有include选项，则默认会编译根目录以及所有子目录中的文件')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"include"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/**/*.ts"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/**/*.tsx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/**/*.vue"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tests/**/*.ts"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tests/**/*.tsx"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// include 也可以指定要编译的路径列表，但是和 files 的区别在于，这里的路径可以是文件夹，也可以是文件，可以使用相对路径和绝对路径，而且可以使用通配符，")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"exclude"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node_modules"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// exclude 表示要排除的、不编译的文件、它也可以指定一个列表，规则和 include 一样，可以是文件也可以是文件夹，可以是相对路径或绝对路径，可以使用通配符")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "extends": "", // extends 可以通过指定一个其它的 tsconfig.json文件路径，来继承这个配置文件里的配置，继承来的文件的配置会覆盖当前文件定义的配置。ts在3.2版本开始，支持继承一个来自node.js包的tsconfig.json配置文件')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "compileOnSave": true, // compileOnSave的值是true或 false，如果为true，在我们编辑了项目中文件保存的时候，编译器会根据 tsconfig.json 的配置重新生成文件，不过这个要编辑器支持')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "references": [] // 一个对象数组，指定要引用的项目')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);