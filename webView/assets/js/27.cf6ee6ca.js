(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{444:function(t,v,_){"use strict";_.r(v);var l=_(15),a=Object(l.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"阅读《重构-改善既有代码的设计》笔记"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#阅读《重构-改善既有代码的设计》笔记"}},[t._v("#")]),t._v(" 阅读《重构：改善既有代码的设计》笔记")]),t._v(" "),_("ul",[_("li",[t._v("所谓重构（refactoring）是这样一个过程：在不改变代码外在行为的前提下，对代码做出修改，以改进程序的内部结构。")]),t._v(" "),_("li",[t._v("本质上：重构就是在代码写好之后改进它的设计。")])]),t._v(" "),_("h2",{attrs:{id:"何时需要考虑重构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#何时需要考虑重构"}},[t._v("#")]),t._v(" 何时需要考虑重构")]),t._v(" "),_("p",[t._v("如果你要给程序添加一个特性，但发现代码因缺乏良好的结构而不易于进行更改，那就先重构那个程序，使其比较容易添加该特性，然后再添加该特性。")]),t._v(" "),_("p",[_("strong",[t._v("重构步骤")]),t._v("：")]),t._v(" "),_("blockquote",[_("p",[t._v("小步修改，每次修改后就运行测试。"),_("br"),t._v("\n重构技术就是以微小的步伐修改程序。如果你犯下错误，很容易便可发现它。")])]),t._v(" "),_("ol",[_("li",[t._v("确保即将修改的代码拥有一组可靠的测试。\n"),_("ul",[_("li",[t._v("重构前，先检查自己是否有一套可靠的测试集。这些测试必须有自我检验能力。")])])]),t._v(" "),_("li",[t._v("提炼函数\n"),_("ul",[_("li",[t._v("需要检查一下，如果将这块代码提炼到自己的一个函数里，有哪些变量会离开原本的作用域。")]),t._v(" "),_("li",[t._v("考虑哪些会被修改的变量以及不会被修改的变量")]),t._v(" "),_("li",[t._v("考虑是否需要返回结果")])])])]),t._v(" "),_("h2",{attrs:{id:"重构手法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重构手法"}},[t._v("#")]),t._v(" 重构手法")]),t._v(" "),_("ol",[_("li",[t._v("拆分循环")]),t._v(" "),_("li",[t._v("移动语句")]),t._v(" "),_("li",[t._v("提炼函数")]),t._v(" "),_("li",[t._v("内联变量")])])])}),[],!1,null,null,null);v.default=a.exports}}]);